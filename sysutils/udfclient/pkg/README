$OpenBSD$

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Installed
=========

cd_disect       Display SCSI / ATAPI device information

cd_sessions     Optical device session management

mmc_format      Format optical media

newfs_udf       Format a filesystem

udfclient       Read or write to a filesystem

udfdump         Display contents of a filesystem

Issuing any command without options will produce a usage summary.

Considerations
==============

UDF on disk drives
------------------

MBRs are not used, the filesystem begins at LBA 0.  Partition "c"
should be used if writing directly to a drive instead of an image
file:

# newfs_udf -L shared.drive /dev/rsd9c
# ufsclient -W /dev/rsd9c

Interoperability with mount_udf(8)
----------------------------------

Kernel recognition (virtual disklabel "a") and mounting r/o with
mount_udf() requires a 2048-byte block size, to map a filesystem
image to an optical drive's sector size.

This precludes direct use with sd(4) devices, and may prevent use
of the filesystem by other OSes unless the image is transferred
to optical media.

Use '-b 2048' with newfs_udf when formatting  and with udfclient
when writing.

UDF root directory
------------------

The UDF root directory is named with colon separated strings.

  "<volume set>:<primary volume>:<logical volume>:<additional tag>"

The udfclient requires a 'cd' into this root directory before you can
read or write files and directories. Spaces will require quoting the
string between " " characters.

udfclient interactive commands
------------------------------

These are ftp-like, with some differences.  Use the 'help' command at
the "UDF>" prompt to display a summary.

Of particular value is a 'get' or 'put' of a directory.  This will copy
the entire structure in or out of the filesystem.

Example
=======

$ cd /tmp
$ mkdir test.directory
$ touch test.directory/{a,b,c,d}
$ dd if=/dev/zero of=test.iso bs=10m count=10
$ newfs_udf -S test -P test -L test test.iso
$ udfclient -W test.iso
.
.
.
UDF> ls
Directory listing of /
drwxrwxrwx     -1     -1          40  test:test:test:fileset
UDF> cd test:test:test:fileset
UDF working directory is     /test:test:test:fileset
Current FS working directory /tmp
UDF> put test.directory
A total of 0 kb transfered at an overal average of 0 kb/sec
UDF> get test.directory new.directory
new.directory/a  ...
new.directory/b  ...
new.directory/c  ...
new.directory/d  ...
A total of 0 kb transfered at an overal average of 115 kb/sec
UDF> quit
.
.
.
$ ls new.directory
a b c d
$
